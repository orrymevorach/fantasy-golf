{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { auth, initializeApp } from \"firebase\";\nimport { useRouter } from \"next/router\";\nvar defaultUser = {\n  isLoggedIn: false,\n  displayName: \"\"\n};\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAxzP3rrdQYUxWO8JvAkuao8R2Q3lTu93Q\",\n  authDomain: \"golf-draft-fdf5b.firebaseapp.com\",\n  databaseURL: \"https://golf-draft-fdf5b.firebaseio.com\",\n  projectId: \"golf-draft-fdf5b\",\n  storageBucket: \"golf-draft-fdf5b.appspot.com\",\n  messagingSenderId: \"696363008338\",\n  appId: \"1:696363008338:web:38f1894846cdf9bd66ba8b\",\n  measurementId: \"G-SLHJKPLPH6\"\n};\n\ntry {\n  initializeApp(firebaseConfig);\n} catch (err) {\n  console.log(\"err\", err);\n}\n\nexport default function useAuth() {\n  _s();\n\n  var _useState = useState(defaultUser),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  var isLoggedIn = user.isLoggedIn;\n  useEffect(function () {\n    if (!isLoggedIn) {\n      Router;\n    }\n  }, [isLoggedIn]);\n\n  function signIn() {\n    var provider = new auth.GoogleAuthProvider();\n    auth().signInWithPopup(provider).then(function (res) {\n      console.log(\"signed in\");\n      setUser({\n        isLoggedIn: true,\n        displayName: res.user.displayName,\n        oAuthId: res.user.uid\n      });\n    })[\"catch\"](function (err) {\n      console.error(err);\n      setUser({\n        isLoggedIn: false,\n        displayName: \"\"\n      });\n    });\n  }\n\n  function signOut() {\n    auth().signOut().then(function () {\n      console.log(\"sign out\");\n      setUser({\n        isLoggedIn: false,\n        displayName: \"\"\n      });\n    })[\"catch\"](function (error) {\n      console.error(error);\n    });\n  }\n\n  return {\n    user: user,\n    signIn: signIn,\n    signOut: signOut\n  };\n}\n\n_s(useAuth, \"DL1yITGW481efXTcSKMN2iWJVI8=\");","map":{"version":3,"sources":["/Users/orrymevorach/Desktop/pga-next/hooks/useAuth.js"],"names":["useState","useEffect","auth","initializeApp","useRouter","defaultUser","isLoggedIn","displayName","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","err","console","log","useAuth","user","setUser","Router","signIn","provider","GoogleAuthProvider","signInWithPopup","then","res","oAuthId","uid","error","signOut"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,IAAT,EAAeC,aAAf,QAAoC,UAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,IAAMC,WAAW,GAAG;AAClBC,EAAAA,UAAU,EAAE,KADM;AAElBC,EAAAA,WAAW,EAAE;AAFK,CAApB;AAKA,IAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,kCAFS;AAGrBC,EAAAA,WAAW,EAAE,yCAHQ;AAIrBC,EAAAA,SAAS,EAAE,kBAJU;AAKrBC,EAAAA,aAAa,EAAE,8BALM;AAMrBC,EAAAA,iBAAiB,EAAE,cANE;AAOrBC,EAAAA,KAAK,EAAE,2CAPc;AAQrBC,EAAAA,aAAa,EAAE;AARM,CAAvB;;AAWA,IAAI;AACFb,EAAAA,aAAa,CAACK,cAAD,CAAb;AACD,CAFD,CAEE,OAAOS,GAAP,EAAY;AACZC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,GAAnB;AACD;;AAED,eAAe,SAASG,OAAT,GAAmB;AAAA;;AAAA,kBACRpB,QAAQ,CAACK,WAAD,CADA;AAAA,MACzBgB,IADyB;AAAA,MACnBC,OADmB;;AAAA,MAExBhB,UAFwB,GAETe,IAFS,CAExBf,UAFwB;AAIhCL,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACK,UAAL,EAAiB;AACfiB,MAAAA,MAAM;AACP;AACF,GAJQ,EAIN,CAACjB,UAAD,CAJM,CAAT;;AAMA,WAASkB,MAAT,GAAkB;AAChB,QAAMC,QAAQ,GAAG,IAAIvB,IAAI,CAACwB,kBAAT,EAAjB;AACAxB,IAAAA,IAAI,GACDyB,eADH,CACmBF,QADnB,EAEGG,IAFH,CAEQ,UAAAC,GAAG,EAAI;AACXX,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAG,MAAAA,OAAO,CAAC;AACNhB,QAAAA,UAAU,EAAE,IADN;AAENC,QAAAA,WAAW,EAAEsB,GAAG,CAACR,IAAJ,CAASd,WAFhB;AAGNuB,QAAAA,OAAO,EAAED,GAAG,CAACR,IAAJ,CAASU;AAHZ,OAAD,CAAP;AAKD,KATH,WAUS,UAAAd,GAAG,EAAI;AACZC,MAAAA,OAAO,CAACc,KAAR,CAAcf,GAAd;AACAK,MAAAA,OAAO,CAAC;AACNhB,QAAAA,UAAU,EAAE,KADN;AAENC,QAAAA,WAAW,EAAE;AAFP,OAAD,CAAP;AAID,KAhBH;AAiBD;;AAED,WAAS0B,OAAT,GAAmB;AACjB/B,IAAAA,IAAI,GACD+B,OADH,GAEGL,IAFH,CAEQ,YAAY;AAChBV,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAG,MAAAA,OAAO,CAAC;AACNhB,QAAAA,UAAU,EAAE,KADN;AAENC,QAAAA,WAAW,EAAE;AAFP,OAAD,CAAP;AAID,KARH,WASS,UAAUyB,KAAV,EAAiB;AACtBd,MAAAA,OAAO,CAACc,KAAR,CAAcA,KAAd;AACD,KAXH;AAYD;;AAED,SAAO;AACLX,IAAAA,IAAI,EAAJA,IADK;AAELG,IAAAA,MAAM,EAANA,MAFK;AAGLS,IAAAA,OAAO,EAAPA;AAHK,GAAP;AAKD;;GAnDuBb,O","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { auth, initializeApp } from \"firebase\";\nimport { useRouter } from \"next/router\";\n\nconst defaultUser = {\n  isLoggedIn: false,\n  displayName: \"\",\n};\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAxzP3rrdQYUxWO8JvAkuao8R2Q3lTu93Q\",\n  authDomain: \"golf-draft-fdf5b.firebaseapp.com\",\n  databaseURL: \"https://golf-draft-fdf5b.firebaseio.com\",\n  projectId: \"golf-draft-fdf5b\",\n  storageBucket: \"golf-draft-fdf5b.appspot.com\",\n  messagingSenderId: \"696363008338\",\n  appId: \"1:696363008338:web:38f1894846cdf9bd66ba8b\",\n  measurementId: \"G-SLHJKPLPH6\",\n};\n\ntry {\n  initializeApp(firebaseConfig);\n} catch (err) {\n  console.log(\"err\", err);\n}\n\nexport default function useAuth() {\n  const [user, setUser] = useState(defaultUser);\n  const { isLoggedIn } = user;\n\n  useEffect(() => {\n    if (!isLoggedIn) {\n      Router;\n    }\n  }, [isLoggedIn]);\n\n  function signIn() {\n    const provider = new auth.GoogleAuthProvider();\n    auth()\n      .signInWithPopup(provider)\n      .then(res => {\n        console.log(\"signed in\");\n        setUser({\n          isLoggedIn: true,\n          displayName: res.user.displayName,\n          oAuthId: res.user.uid,\n        });\n      })\n      .catch(err => {\n        console.error(err);\n        setUser({\n          isLoggedIn: false,\n          displayName: \"\",\n        });\n      });\n  }\n\n  function signOut() {\n    auth()\n      .signOut()\n      .then(function () {\n        console.log(\"sign out\");\n        setUser({\n          isLoggedIn: false,\n          displayName: \"\",\n        });\n      })\n      .catch(function (error) {\n        console.error(error);\n      });\n  }\n\n  return {\n    user,\n    signIn,\n    signOut,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}