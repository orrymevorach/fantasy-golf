{"ast":null,"code":"var _jsxFileName = \"/Users/orrymevorach/Desktop/pga-next/components/teamPortal/teamPortal.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { getAirtableData } from \"../../utils/airtableUtils\";\nimport { isEmpty } from \"../../utils/general\";\nimport styles from \"./teamPortal.module.scss\";\nexport default function TeamPortal() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState({}),\n      teamData = _useState[0],\n      setTeamData = _useState[1];\n\n  var _useRouter = useRouter(),\n      userId = _useRouter.query.userId;\n\n  function formatTeam(fields) {\n    var team = [];\n\n    for (var i = 0; i < fields.players.length; i++) {\n      var player = {\n        name: fields[\"name (from Players)\"][i],\n        flag: fields[\"flag (from Players)\"][i],\n        ranking: fields[\"flag (from Players)\"][i]\n      };\n      team.push(player);\n    }\n\n    return team;\n  }\n\n  useEffect(function () {\n    if (userId) {\n      getAirtableData(\"Draft Selections\", callback);\n    }\n\n    function callback(records) {\n      records.forEach(function (_ref) {\n        var fields = _ref.fields;\n\n        if (fields.userId === userId) {\n          setTeamData(fields);\n        }\n      });\n    }\n  }, [userId]);\n  var name = \"name (from Players)\";\n  var ranking = \"ranking (from Players)\";\n\n  var Column = function Column(string, heading) {\n    return __jsx(React.Fragment, null, __jsx(\"h3\", {\n      className: styles.columnTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, heading), teamData[string].map(function (value) {\n      return __jsx(\"div\", {\n        className: styles.valueContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, __jsx(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }, value));\n    }));\n  };\n\n  return __jsx(\"div\", {\n    className: styles.teamPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.playerChart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, !isEmpty(teamData) && __jsx(\"div\", {\n    className: styles.columns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: styles.nameColumn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, __jsx(\"h3\", {\n    className: styles.columnTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, \"Players\"), teamData[name].map(function (name) {\n    return __jsx(\"div\", {\n      className: styles.valueContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 19\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, name));\n  })), __jsx(\"div\", {\n    className: styles.rankColumn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, Column(ranking, \"Ranking\")))));\n}\n\n_s(TeamPortal, \"EKRXrC+WT4TMGM0ds60rtBCr4CY=\", false, function () {\n  return [useRouter];\n});\n\n_c = TeamPortal;\n\nvar _c;\n\n$RefreshReg$(_c, \"TeamPortal\");","map":{"version":3,"sources":["/Users/orrymevorach/Desktop/pga-next/components/teamPortal/teamPortal.jsx"],"names":["React","useEffect","useState","useRouter","getAirtableData","isEmpty","styles","TeamPortal","teamData","setTeamData","userId","query","formatTeam","fields","team","i","players","length","player","name","flag","ranking","push","callback","records","forEach","Column","string","heading","columnTitle","map","value","valueContainer","teamPage","playerChart","columns","nameColumn","rankColumn"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { getAirtableData } from \"../../utils/airtableUtils\";\nimport { isEmpty } from \"../../utils/general\";\nimport styles from \"./teamPortal.module.scss\";\n\nexport default function TeamPortal() {\n  const [teamData, setTeamData] = useState({});\n  const {\n    query: { userId },\n  } = useRouter();\n\n  function formatTeam(fields) {\n    let team = [];\n    for (let i = 0; i < fields.players.length; i++) {\n      const player = {\n        name: fields[\"name (from Players)\"][i],\n        flag: fields[\"flag (from Players)\"][i],\n        ranking: fields[\"flag (from Players)\"][i],\n      };\n      team.push(player);\n    }\n    return team;\n  }\n\n  useEffect(() => {\n    if (userId) {\n      getAirtableData(\"Draft Selections\", callback);\n    }\n\n    function callback(records) {\n      records.forEach(function ({ fields }) {\n        if (fields.userId === userId) {\n          setTeamData(fields);\n        }\n      });\n    }\n  }, [userId]);\n\n  const name = \"name (from Players)\";\n  const ranking = \"ranking (from Players)\";\n\n  const Column = (string, heading) => {\n    return (\n      <>\n        <h3 className={styles.columnTitle}>{heading}</h3>\n        {teamData[string].map(value => (\n          <div className={styles.valueContainer}>\n            <p>{value}</p>\n          </div>\n        ))}\n      </>\n    );\n  };\n\n  return (\n    <div className={styles.teamPage}>\n      <div className={styles.playerChart}>\n        {!isEmpty(teamData) && (\n          <div className={styles.columns}>\n            <div className={styles.nameColumn}>\n              <h3 className={styles.columnTitle}>Players</h3>\n              {teamData[name].map(name => {\n                return (\n                  <div className={styles.valueContainer}>\n                    <p>{name}</p>\n                  </div>\n                );\n              })}\n            </div>\n            <div className={styles.rankColumn}>\n              {Column(ranking, \"Ranking\")}\n              {/* <h3 className={styles.columnTitle}>Ranking</h3>\n              {teamData[ranking].map(rank => (\n                <div className={styles.valueContainer}>\n                  <p>{rank}</p>\n                </div>\n              ))} */}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}