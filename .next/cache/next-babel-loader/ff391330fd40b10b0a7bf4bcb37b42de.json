{"ast":null,"code":"var _jsxFileName = \"/Users/orrymevorach/Desktop/pga-next/components/groups/group/group.jsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useContext, useEffect, useCallback } from \"react\";\nimport Radio from \"../../radio/radio\";\nimport Player from \"../../player/player\";\nimport { DraftboardContext } from \"../../../context/draftboardContext\";\nexport default function Group({\n  group,\n  index\n}) {\n  const {\n    0: selectedPlayer,\n    1: setSelectedPlayer\n  } = useState({});\n  const {\n    selectedPlayers,\n    setSelectedPlayers\n  } = useContext(DraftboardContext);\n  const updateSelections = useCallback(() => {\n    return selectedPlayers && selectedPlayers.map(group => {\n      if (group.group === selectedPlayer.group) {\n        group.selectedPlayer = selectedPlayer;\n      }\n\n      return group;\n    });\n  }, [selectedPlayer]);\n  useEffect(() => {\n    setSelectedPlayers(updateSelections());\n  }, [setSelectedPlayers, updateSelections]);\n  return __jsx(\"li\", {\n    key: group,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"Group \", index + 1), __jsx(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, group.map(player => {\n    return __jsx(Radio, {\n      key: player.name,\n      name: player.group,\n      id: player.name,\n      onChange: () => setSelectedPlayer(player),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, __jsx(Player, {\n      player: player,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    }));\n  })));\n}","map":{"version":3,"sources":["/Users/orrymevorach/Desktop/pga-next/components/groups/group/group.jsx"],"names":["React","useState","useContext","useEffect","useCallback","Radio","Player","DraftboardContext","Group","group","index","selectedPlayer","setSelectedPlayer","selectedPlayers","setSelectedPlayers","updateSelections","map","player","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,EAAiDC,WAAjD,QAAoE,OAApE;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,iBAAT,QAAkC,oCAAlC;AAEA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAf,EAAiC;AAC9C,QAAM;AAAA,OAACC,cAAD;AAAA,OAAiBC;AAAjB,MAAsCX,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM;AAAEY,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAA0CZ,UAAU,CAACK,iBAAD,CAA1D;AAEA,QAAMQ,gBAAgB,GAAGX,WAAW,CAAC,MAAM;AACzC,WACES,eAAe,IACfA,eAAe,CAACG,GAAhB,CAAoBP,KAAK,IAAI;AAC3B,UAAIA,KAAK,CAACA,KAAN,KAAgBE,cAAc,CAACF,KAAnC,EAA0C;AACxCA,QAAAA,KAAK,CAACE,cAAN,GAAuBA,cAAvB;AACD;;AACD,aAAOF,KAAP;AACD,KALD,CAFF;AASD,GAVmC,EAUjC,CAACE,cAAD,CAViC,CAApC;AAYAR,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,kBAAkB,CAACC,gBAAgB,EAAjB,CAAlB;AACD,GAFQ,EAEN,CAACD,kBAAD,EAAqBC,gBAArB,CAFM,CAAT;AAIA,SACE;AAAI,IAAA,GAAG,EAAEN,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWC,KAAK,GAAG,CAAnB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACO,GAAN,CAAUC,MAAM,IAAI;AACnB,WACE,MAAC,KAAD;AACE,MAAA,GAAG,EAAEA,MAAM,CAACC,IADd;AAEE,MAAA,IAAI,EAAED,MAAM,CAACR,KAFf;AAGE,MAAA,EAAE,EAAEQ,MAAM,CAACC,IAHb;AAIE,MAAA,QAAQ,EAAE,MAAMN,iBAAiB,CAACK,MAAD,CAJnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,MAAC,MAAD;AAAQ,MAAA,MAAM,EAAEA,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAUD,GAXA,CADH,CAFF,CADF;AAmBD","sourcesContent":["import React, { useState, useContext, useEffect, useCallback } from \"react\";\nimport Radio from \"../../radio/radio\";\nimport Player from \"../../player/player\";\nimport { DraftboardContext } from \"../../../context/draftboardContext\";\n\nexport default function Group({ group, index }) {\n  const [selectedPlayer, setSelectedPlayer] = useState({});\n  const { selectedPlayers, setSelectedPlayers } = useContext(DraftboardContext);\n\n  const updateSelections = useCallback(() => {\n    return (\n      selectedPlayers &&\n      selectedPlayers.map(group => {\n        if (group.group === selectedPlayer.group) {\n          group.selectedPlayer = selectedPlayer;\n        }\n        return group;\n      })\n    );\n  }, [selectedPlayer]);\n\n  useEffect(() => {\n    setSelectedPlayers(updateSelections());\n  }, [setSelectedPlayers, updateSelections]);\n\n  return (\n    <li key={group}>\n      <h1>Group {index + 1}</h1>\n      <form>\n        {group.map(player => {\n          return (\n            <Radio\n              key={player.name}\n              name={player.group}\n              id={player.name}\n              onChange={() => setSelectedPlayer(player)}\n            >\n              <Player player={player} />\n            </Radio>\n          );\n        })}\n      </form>\n    </li>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}