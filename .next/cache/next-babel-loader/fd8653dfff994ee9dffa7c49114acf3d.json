{"ast":null,"code":"var _jsxFileName = \"/Users/orrymevorach/Desktop/pga-next/components/teamPortal/teamPortal.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { getAirtableData } from \"../../utils/airtableUtils\";\nimport { isEmpty } from \"../../utils/general\";\nimport styles from \"./teamPortal.module.scss\";\nimport Column from \"./column/column\";\nexport default function TeamPortal() {\n  _s();\n\n  var _useState = useState({}),\n      teamData = _useState[0],\n      setTeamData = _useState[1];\n\n  var _useRouter = useRouter(),\n      userId = _useRouter.query.userId;\n\n  function formatTeam(fields) {\n    var team = [];\n\n    for (var i = 0; i < fields.players.length; i++) {\n      var player = {\n        name: fields[\"name (from Players)\"][i],\n        flag: fields[\"flag (from Players)\"][i],\n        ranking: fields[\"flag (from Players)\"][i]\n      };\n      team.push(player);\n    }\n\n    return team;\n  }\n\n  useEffect(function () {\n    if (userId) {\n      getAirtableData(\"Draft Selections\", callback);\n    }\n\n    function callback(records) {\n      records.forEach(function (_ref) {\n        var fields = _ref.fields;\n\n        if (fields.userId === userId) {\n          setTeamData(fields);\n        }\n      });\n    }\n  }, [userId]);\n  var name = \"name (from Players)\";\n  var ranking = \"ranking (from Players)\";\n  console.log(teamData);\n  return __jsx(\"div\", {\n    className: styles.teamPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.playerChart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, !isEmpty(teamData) && __jsx(\"div\", {\n    className: styles.columns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, __jsx(Column, {\n    heading: \"Ranking\",\n    data: teamData[ranking],\n    style: {\n      width: \"100px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), __jsx(Column, {\n    heading: \"Players\",\n    data: teamData[name],\n    style: {\n      width: \"200px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), __jsx(Column, {\n    heading: \"Round 1\",\n    data: [],\n    style: {\n      width: \"100px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), __jsx(Column, {\n    heading: \"Round 2\",\n    data: [],\n    style: {\n      width: \"100px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }), __jsx(Column, {\n    heading: \"Round 3\",\n    data: [],\n    style: {\n      width: \"100px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }), __jsx(Column, {\n    heading: \"Round 4\",\n    data: [],\n    style: {\n      width: \"100px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }))));\n}\n\n_s(TeamPortal, \"EKRXrC+WT4TMGM0ds60rtBCr4CY=\", false, function () {\n  return [useRouter];\n});\n\n_c = TeamPortal;\n\nvar _c;\n\n$RefreshReg$(_c, \"TeamPortal\");","map":{"version":3,"sources":["/Users/orrymevorach/Desktop/pga-next/components/teamPortal/teamPortal.jsx"],"names":["React","useEffect","useState","useRouter","getAirtableData","isEmpty","styles","Column","TeamPortal","teamData","setTeamData","userId","query","formatTeam","fields","team","i","players","length","player","name","flag","ranking","push","callback","records","forEach","console","log","teamPage","playerChart","columns","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { getAirtableData } from \"../../utils/airtableUtils\";\nimport { isEmpty } from \"../../utils/general\";\nimport styles from \"./teamPortal.module.scss\";\nimport Column from \"./column/column\";\n\nexport default function TeamPortal() {\n  const [teamData, setTeamData] = useState({});\n  const {\n    query: { userId },\n  } = useRouter();\n\n  function formatTeam(fields) {\n    let team = [];\n    for (let i = 0; i < fields.players.length; i++) {\n      const player = {\n        name: fields[\"name (from Players)\"][i],\n        flag: fields[\"flag (from Players)\"][i],\n        ranking: fields[\"flag (from Players)\"][i],\n      };\n      team.push(player);\n    }\n    return team;\n  }\n\n  useEffect(() => {\n    if (userId) {\n      getAirtableData(\"Draft Selections\", callback);\n    }\n\n    function callback(records) {\n      records.forEach(function ({ fields }) {\n        if (fields.userId === userId) {\n          setTeamData(fields);\n        }\n      });\n    }\n  }, [userId]);\n\n  const name = \"name (from Players)\";\n  const ranking = \"ranking (from Players)\";\n\n  console.log(teamData);\n\n  return (\n    <div className={styles.teamPage}>\n      <div className={styles.playerChart}>\n        {!isEmpty(teamData) && (\n          <div className={styles.columns}>\n            <Column\n              heading=\"Ranking\"\n              data={teamData[ranking]}\n              style={{ width: \"100px\" }}\n            />\n\n            <Column\n              heading=\"Players\"\n              data={teamData[name]}\n              style={{ width: \"200px\" }}\n            />\n\n            <Column heading=\"Round 1\" data={[]} style={{ width: \"100px\" }} />\n            <Column heading=\"Round 2\" data={[]} style={{ width: \"100px\" }} />\n            <Column heading=\"Round 3\" data={[]} style={{ width: \"100px\" }} />\n            <Column heading=\"Round 4\" data={[]} style={{ width: \"100px\" }} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}